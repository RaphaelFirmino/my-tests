{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Python_2","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO9XSVjgraoSyDvK7OIl1ZF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"jEskMl_We7qu"},"source":["# !pip install 'nova_biblioteca' = instalando nova biblioteca"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HodAG-57a_4d"},"source":["4 > 2 and 2 < 4 # resultado = True\n","not (4 > 2 and 2 < 4) # not() = inverte o resultado"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TafE7nGlw4TU"},"source":["frase = \"Programador\"\n","for i in frase:\n","  if i == \"a\":\n","   # pass # mantém execucação do codigo\n","   # continue # retorna para a linha de inicio do for\n","    break # para a execução do código\n","  print(i)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3k2EwFBh4Vdp"},"source":["def potencia_n(a,b=2): # b=2 : deixou 2 como valor padrao para b\n","  p = a ** b\n","  return p\n","\n","potencia_n(2,4)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NvnLC3Ql8H7j"},"source":["def soma_valores(*valores): # aceitacao de varios valores\n","  resultado = 0\n","  for valor in valores:\n","    resultado += valor\n","  return resultado\n","\n","soma_valores(2,3,10,5.5)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kk2UpS0peg1N"},"source":["import numpy\n","m = numpy.array([[1,2,3],[4,5,6],[7,8,9]]) #transformando em matriz"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0IXTigufL4yk"},"source":["import this"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DYXA09lCI9OB"},"source":["import math # importando biblioteca\n","math.sqrt(9)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mwslnw11KAN7"},"source":["from math import sqrt,cos # importei apenas a funcao desejada\n","sqrt(9) # raiz quadrada\n","cos(9)  # coseno\n","# sempre será exibido o resultado da ultima expressao"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PNhWiCdNK-B5"},"source":["from math import * # importa diretamente todas as funcoes\n","tan(9) # tangente\n","floor(9.99) # arredonda valor para baixo"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"y_nnw6uX-_Qd"},"source":["import numpy as np\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3qFEgbfb_TGm"},"source":["x = np.linspace(0,2,100)\n","y = 2*x\n","y2 = x**2\n","plt.plot(x,y,\"-\")\n","plt.plot(x,y2,'-r')\n","plt.xlabel('Eixo X')\n","plt.ylabel('Eixo Y')\n","plt.title('Titulo do gráfico')\n","plt.legend(['X vezes 2','X potencia 2'])\n","plt.show() # remove da tela a linha descritiva do codigo"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1l_n8hMmCswU"},"source":["y2 = x**2\n","plt.plot(x,y2,'-r')\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5_NmGtEgGpXc"},"source":["x = np.linspace(-1,1,100)\n","y1 = x*2\n","y2 = x**2\n","y3 = x**3\n","y4 = np.sin(x)\n","\n","figura,janela = plt.subplots(2,2)\n","janela[0,0].plot(x,y1,'-')\n","janela[0,1].plot(x,y2,'-r')\n","janela[1,0].plot(x,y3,'-y')\n","janela[1,1].plot(x,y4,'-g')\n","\n","figura.legend(['X vezes 2','X potencia 2','X potencia 3','Seno de X'])\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0DHyh-4Wh2g9"},"source":["def contagemRegressiva(n): # recursividade\n","  while(n):\n","    print(n)\n","    n -= 1\n","  print('Decolar!')\n"," \n","contagemRegressiva(10)"],"execution_count":null,"outputs":[]}]}